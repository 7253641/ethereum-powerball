extern rng = [random_numbers]

data tickets[2^80](owner, numbers[5], powerball)
data config(ticket_cost, admin, next_id, rng_address, block_deadline, winning_numbers)

# 0
def initialize():
  self.config.admin = msg.sender

# 1
def set_configuration(ticket_cost, rng_address, block_deadline):
  if msg.sender == self.config.admin:
    self.config.ticket_cost = ticket_cost
    self.config.block_deadline = block_deadline

    if rng_address != 0:
      self.config.rng_address = rng_address
    else:
      self.config.rng_address = create('rng.se')

# 2
def buy_ticket(first, second, third, fourth, fifth, powerball):
  if msg.value >= self.config.ticket_cost:
    if block.number <= self.config.block_deadline:
      id = self.config.next_id

      self.tickets[id].owner = msg.sender
      self.tickets[id].numbers[0] = first
      self.tickets[id].numbers[1] = second
      self.tickets[id].numbers[2] = third
      self.tickets[id].numbers[3] = fourth
      self.tickets[id].numbers[4] = fifth
      self.tickets[id].powerball = powerball

      self.config.next_id = id + 1

      return([id], 1)
    else:
      return(-2)
  else:
    return(-1)

# 3
def get_ticket_owner(id):
  return(self.tickets[id].owner)

# 4
def get_ticket_numbers(id):
  return([self.tickets[id].numbers[0], self.tickets[id].numbers[1], self.tickets[id].numbers[2], self.tickets[id].numbers[3], self.tickets[id].numbers[4], self.tickets[id].powerball], 6)

# 5
def transfer_ticket(id, new_owner):
  if self.tickets[id].owner == msg.sender:
    self.tickets[id].owner = new_owner

# 6
def check_winners():
  if block.number <= self.config.block_deadline:
    return(-1)
  else:
    random_numbers = self.config.rng_address.random_numbers(as=rng, outsz = 6)
    self.config.winning_numbers = random_numbers
    return(random_numbers, 6)
